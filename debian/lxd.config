#!/bin/sh

set -e
. /usr/share/debconf/confmodule

maskcidr() {
   local x=${1##*255.}
   set -- 0^^^128^192^224^240^248^252^254^ $(( (${#1} - ${#x})*2 )) ${x%%.*}
   x=${1%%$3*}
   echo $(( $2 + (${#x}/4) ))
}

# Attempt to read existing configuration into debconf
if [ -e /etc/default/lxd-bridge ]; then
    . /etc/default/lxd-bridge

    db_set lxd/setup-bridge ${USE_LXD_BRIDGE}
    db_set lxd/bridge-name ${LXD_BRIDGE}

    if [ -n "${LXD_IPV4_ADDR}" ]; then
        db_set lxd/bridge-ipv4 true
    else
        db_set lxd/bridge-ipv4 false
    fi

    db_set lxd/bridge-ipv4-address ${LXD_IPV4_ADDR}

    CIDR=$(maskcidr ${LXD_IPV4_NETMASK})
    if [ "${CIDR}" = "0" ]; then
        db_set lxd/bridge-ipv4-netmask ""
    else
        db_set lxd/bridge-ipv4-netmask ${CIDR}
    fi

    db_set lxd/bridge-ipv4-dhcp-first $(echo ${LXD_IPV4_DHCP_RANGE} | cut -d, -f1)
    db_set lxd/bridge-ipv4-dhcp-last $(echo ${LXD_IPV4_DHCP_RANGE} | cut -d, -f2)
    db_set lxd/bridge-ipv4-dhcp-leases ${LXD_IPV4_DHCP_MAX}
    db_set lxd/bridge-ipv4-nat ${LXD_IPV4_NAT}

    if [ -n "${LXD_IPV6_ADDR}" ]; then
        db_set lxd/bridge-ipv6 true
    else
        db_set lxd/bridge-ipv6 false
    fi

    db_set lxd/bridge-ipv6-address ${LXD_IPV6_ADDR}
    db_set lxd/bridge-ipv6-netmask ${LXD_IPV6_MASK}
    db_set lxd/bridge-ipv6-nat ${LXD_IPV6_NAT}

    db_set lxd/bridge-dnsmasq ${LXD_CONFILE}
    db_set lxd/bridge-domain ${LXD_DOMAIN}
    db_set lxd/bridge-http-proxy ${LXD_IPV6_PROXY}
fi

# Ask questions
db_input medium lxd/setup-bridge || true
db_go
db_get lxd/setup-bridge
if [ "${RET}" = "true" ]; then
    HAS_SUBNET=false

    db_input medium lxd/bridge-name || true

    db_input medium lxd/bridge-ipv4 || true
    db_go
    db_get lxd/bridge-ipv4
    if [ "${RET}" = "true" ]; then
        db_input medium lxd/bridge-ipv4-address || true
        db_input medium lxd/bridge-ipv4-netmask || true
        db_input medium lxd/bridge-ipv4-dhcp-first || true
        db_input medium lxd/bridge-ipv4-dhcp-last || true
        db_input medium lxd/bridge-ipv4-dhcp-leases || true
        db_input medium lxd/bridge-ipv4-nat || true
        HAS_SUBNET=true
    else
        db_set lxd/bridge-ipv4-address "" || true
        db_set lxd/bridge-ipv4-netmask "" || true
        db_set lxd/bridge-ipv4-dhcp-first "" || true
        db_set lxd/bridge-ipv4-dhcp-last "" || true
        db_set lxd/bridge-ipv4-dhcp-leases "" || true
        db_set lxd/bridge-ipv4-nat true || true
    fi

    db_input medium lxd/bridge-ipv6 || true
    db_go
    db_get lxd/bridge-ipv6
    if [ "${RET}" = "true" ]; then
        db_input medium lxd/bridge-ipv6-address || true
        db_input medium lxd/bridge-ipv6-netmask || true
        db_input medium lxd/bridge-ipv6-nat || true
        HAS_SUBNET=true
    else
        db_set lxd/bridge-ipv6-address "" || true
        db_set lxd/bridge-ipv6-netmask "" || true
        db_set lxd/bridge-ipv6-nat false || true
    fi

    db_input low lxd/bridge-dnsmasq || true
    db_input low lxd/bridge-domain || true

    if [ "${HAS_SUBNET}" = "true" ]; then
        db_set lxd/bridge-http-proxy false
    else
        db_set lxd/bridge-http-proxy true
    fi

    db_input low lxd/bridge-http-proxy || true
else
    db_input medium lxd/use-existing-bridge || true
    db_go
    db_get lxd/use-existing-bridge
    if [ "${RET}" = "true" ]; then
        db_input medium lxd/bridge-name || true
    else
        db_set lxd/bridge-name ""
    fi
fi

db_go
