#!/bin/sh
set -e

if ([ "$1" = "configure" ] && [ ! -e /etc/default/lxd-bridge ]) || [ -n "${DEBCONF_RECONFIGURE}" ]; then
    . /usr/share/debconf/confmodule

    cidrmask() {
       set -- $(( 5 - ($1 / 8) )) 255 255 255 255 $(( (255 << (8 - ($1 % 8))) & 255 )) 0 0 0
       [ $1 -gt 1 ] && shift $1 || shift
       echo ${1-0}.${2-0}.${3-0}.${4-0}
    }

    dbget() {
        db_get ${1}
        echo ${RET}
    }

    # Get values
    bridge=$(dbget lxd/setup-bridge)
    bridge_name=$(dbget lxd/bridge-name)
    ipv4_address=$(dbget lxd/bridge-ipv4-address)
    ipv4_cidr=$(dbget lxd/bridge-ipv4-netmask)
    ipv4_dhcp_first=$(dbget lxd/bridge-ipv4-dhcp-first)
    ipv4_dhcp_last=$(dbget lxd/bridge-ipv4-dhcp-last)
    ipv4_dhcp_leases=$(dbget lxd/bridge-ipv4-dhcp-leases)
    ipv4_nat=$(dbget lxd/bridge-ipv4-nat)
    ipv6_address=$(dbget lxd/bridge-ipv6-address)
    ipv6_cidr=$(dbget lxd/bridge-ipv6-netmask)
    ipv6_nat=$(dbget lxd/bridge-ipv6-nat)
    bridge_dnsmasq=$(dbget lxd/bridge-dnsmasq)
    bridge_domain=$(dbget lxd/bridge-domain)
    bridge_proxy=$(dbget lxd/bridge-http-proxy)

    # Generate the new config file
    [ -n "${ipv4_address}" ] && [ -n "${ipv4_cidr}" ] && ipv4_network="${ipv4_address}/${ipv4_cidr}"
    [ -n "${ipv4_cidr}" ] && ipv4_netmask=$(cidrmask ${ipv4_cidr})
    [ -n "${ipv4_dhcp_first}" ] && [ -n "${ipv4_dhcp_last}" ] && ipv4_dhcp_range="${ipv4_dhcp_first},${ipv4_dhcp_last}"
    [ -n "${ipv6_address}" ] && [ -n "${ipv6_cidr}" ] && ipv6_network="${ipv6_address}/${ipv6_cidr}"

    INITIAL_INSTALL=true
    [ -e /etc/default/lxd-bridge ] && INITIAL_INSTALL=false

    (
    cat << EOF
# WARNING: This file is generated by a debconf template!
# It is recommended to update it by using "dpkg-reconfigure lxd"

# Whether to setup a new bridge
USE_LXD_BRIDGE="${bridge}"

# Bridge name
# This is still used even if USE_LXD_BRIDGE is set to false
# set to an empty value to fully disable
LXD_BRIDGE="${bridge_name}"

# dnsmasq configuration path
LXD_CONFILE="${bridge_dnsmasq}"

# dnsmasq domain
LXD_DOMAIN="${bridge_domain}"

# IPv4
LXD_IPV4_ADDR="${ipv4_address}"
LXD_IPV4_NETMASK="${ipv4_netmask}"
LXD_IPV4_NETWORK="${ipv4_network}"
LXD_IPV4_DHCP_RANGE="${ipv4_dhcp_range}"
LXD_IPV4_DHCP_MAX="${ipv4_dhcp_leases}"
LXD_IPV4_NAT="${ipv4_nat}"

# IPv6
LXD_IPV6_ADDR="${ipv6_address}"
LXD_IPV6_MASK="${ipv6_cidr}"
LXD_IPV6_NETWORK="${ipv6_network}"
LXD_IPV6_NAT="${ipv6_nat}"

# Proxy server
LXD_IPV6_PROXY="${bridge_proxy}"
EOF
) > /etc/default/lxd-bridge

    if [ "${INITIAL_INSTALL}" = "true" ]; then
        mkdir -p /var/lib/lxd-bridge
        touch /var/lib/lxd-bridge/timestamp
    fi
fi

#DEBHELPER#

# Manual init script handling
if [ -d /run/systemd/system ]; then
	systemctl --system daemon-reload >/dev/null || true
	deb-systemd-invoke start lxd.socket >/dev/null || true
elif  [ -x "/etc/init.d/lxd" ] || [ -e "/etc/init/lxd.conf" ]; then
	invoke-rc.d lxd start || exit $?
fi

exit 0
