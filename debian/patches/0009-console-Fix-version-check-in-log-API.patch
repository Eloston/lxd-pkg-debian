From 16be43562232be899199349cdc016ad578bc51f2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@ubuntu.com>
Date: Fri, 5 Jan 2018 15:00:02 -0500
Subject: console: Fix version check in log API
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: St√©phane Graber <stgraber@ubuntu.com>
---
 lxd/container_console.go | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/lxd/container_console.go b/lxd/container_console.go
index 07ef18b4..3f1216df 100644
--- a/lxd/container_console.go
+++ b/lxd/container_console.go
@@ -320,16 +320,16 @@ func containerConsolePost(d *Daemon, r *http.Request) Response {
 }
 
 func containerConsoleLogGet(d *Daemon, r *http.Request) Response {
+	if !util.RuntimeLiblxcVersionAtLeast(3, 0, 0) {
+		return BadRequest(fmt.Errorf("Querying the console buffer requires liblxc >= 3.0"))
+	}
+
 	name := mux.Vars(r)["name"]
 	c, err := containerLoadByName(d.State(), name)
 	if err != nil {
 		return SmartError(err)
 	}
 
-	if util.RuntimeLiblxcVersionAtLeast(3, 0, 0) {
-		return BadRequest(fmt.Errorf("Querying the console buffer requires liblxc >= 3.0"))
-	}
-
 	ent := fileResponseEntry{}
 	if !c.IsRunning() {
 		// Hand back the contents of the console ringbuffer logfile.
@@ -367,16 +367,16 @@ func containerConsoleLogGet(d *Daemon, r *http.Request) Response {
 }
 
 func containerConsoleLogDelete(d *Daemon, r *http.Request) Response {
+	if !util.RuntimeLiblxcVersionAtLeast(3, 0, 0) {
+		return BadRequest(fmt.Errorf("Clearing the console buffer requires liblxc >= 3.0"))
+	}
+
 	name := mux.Vars(r)["name"]
 	c, err := containerLoadByName(d.State(), name)
 	if err != nil {
 		return SmartError(err)
 	}
 
-	if util.RuntimeLiblxcVersionAtLeast(3, 0, 0) {
-		return BadRequest(fmt.Errorf("Clearing the console buffer requires liblxc >= 3.0"))
-	}
-
 	truncateConsoleLogFile := func(path string) error {
 		// Check that this is a regular file. We don't want to try and unlink
 		// /dev/stderr or /dev/null or something.
