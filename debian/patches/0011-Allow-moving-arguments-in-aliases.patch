From 7ee61ca63b7b5926a1a3548e7262fb55c5bfd125 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@ubuntu.com>
Date: Thu, 10 Dec 2015 16:51:06 -0500
Subject: Allow moving arguments in aliases
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This makes it possible to create much more complex aliases like:

    aliases:
      console: exec @ARGS@ -- bash

Which will define a new "lxc console" command that will execute
"lxc exec <arguments> -- bash".

Closes #1395

Signed-off-by: St√©phane Graber <stgraber@ubuntu.com>
---
 lxc/main.go | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/lxc/main.go b/lxc/main.go
index 62b636d..a655de3 100644
--- a/lxc/main.go
+++ b/lxc/main.go
@@ -192,17 +192,29 @@ var errArgs = fmt.Errorf(i18n.G("wrong number of subcommand arguments"))
 func execIfAliases(config *lxd.Config, origArgs []string) {
 	newArgs := []string{}
 	expandedAlias := false
-	for _, arg := range origArgs {
+	done := false
+	for i, arg := range origArgs {
 		changed := false
 		for k, v := range config.Aliases {
 			if k == arg {
 				expandedAlias = true
 				changed = true
-				newArgs = append(newArgs, strings.Split(v, " ")...)
+				for _, aliasArg := range strings.Split(v, " ") {
+					if aliasArg == "@ARGS@" && len(origArgs) > i {
+						done = true
+						newArgs = append(newArgs, origArgs[i+1:]...)
+					} else {
+						newArgs = append(newArgs, aliasArg)
+					}
+				}
 				break
 			}
 		}
 
+		if done {
+			break
+		}
+
 		if !changed {
 			newArgs = append(newArgs, arg)
 		}
