From 68891b3409930b2b1e080362db09b126f40f2c57 Mon Sep 17 00:00:00 2001
From: Free Ekanayaka <free.ekanayaka@canonical.com>
Date: Mon, 15 May 2017 08:37:03 +0200
Subject: Fix regression in image auto-update logic

From what I understand, it seems that this commit:

https://github.com/lxc/lxd/commit/7d4869527f1cef579015a06258c93a33e76cc865

introduced a regression in the auto-update logic. The code that was
setting the AutoUpdate flag in the *api.Image structure in line 541:

https://github.com/lxc/lxd/commit/7d4869527f1cef579015a06258c93a33e76cc865#diff-6182827642cd00e061c6ffe52891acc5L541

was moved down in the function:

https://github.com/lxc/lxd/commit/7d4869527f1cef579015a06258c93a33e76cc865#diff-6182827642cd00e061c6ffe52891acc5R482

however the new location is after the call to dbImageInsert:

```
	err = dbImageInsert(d.db, info.Fingerprint, info.Filename, info.Size, info.Public, info.AutoUpdate, info.Architecture, info.CreatedAt, info.ExpiresAt, info.Properties)
```

that actually makes use of such setting. This results in the
auto_update column in the database always being 0, no matter what, and
the server logic to auto-update images will never kick in.

This commit should also fix another (non fatal) regression introduced
by:

https://github.com/lxc/lxd/commit/806d55c88562ab82b32d2d8563c20a8ec9bdac98

where appending the empty string "" to the poolNames to be processed
ends up triggering a call to ```doDeleteImageFromPool()``` from
``autoUpdateImage``:

https://github.com/lxc/lxd/blob/471604191b9793ffe479036dab8e527cb743cee1/lxd/images.go#L975

which as far as I understand will always end up with an error in case
poolName is the empty string, so a spurious error will be logged.

Note that auto-update regression affects the latest 2.13 release, but
not 2.12.

Signed-off-by: Free Ekanayaka <free.ekanayaka@canonical.com>
---
 lxd/daemon_images.go | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/lxd/daemon_images.go b/lxd/daemon_images.go
index 1394819e..d3c7e525 100644
--- a/lxd/daemon_images.go
+++ b/lxd/daemon_images.go
@@ -433,6 +433,13 @@ func (d *Daemon) ImageDownload(op *operation, server string, protocol string, ce
 	// Override visiblity
 	info.Public = false
 
+	// We want to enable auto-update only if we were passed an
+	// alias name, so we can figure when the associated
+	// fingerprint changes in the remote.
+	if alias != fp {
+		info.AutoUpdate = autoUpdate
+	}
+
 	// Create storage entry
 	err = d.Storage.ImageCreate(info.Fingerprint)
 	if err != nil {
@@ -458,8 +465,6 @@ func (d *Daemon) ImageDownload(op *operation, server string, protocol string, ce
 		if err != nil {
 			return nil, err
 		}
-
-		info.AutoUpdate = autoUpdate
 	}
 
 	// Mark the image as "cached" if downloading for a container
