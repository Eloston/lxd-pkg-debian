From 39459cfbf1273d7738776838094b0feb71c4a318 Mon Sep 17 00:00:00 2001
From: Christian Brauner <christian.brauner@ubuntu.com>
Date: Wed, 11 Oct 2017 10:02:53 +0200
Subject: network: do not update limits unconditionally

In order for a caller to be able to decide whether a given device needs to be
updated we return a list of changed keys. This way the caller can decide if
they want to take an action or not.

Closes #3920.

Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
---
 lxd/container.go     |  2 ++
 lxd/container_lxc.go | 21 +++++++++++++++------
 lxd/types/devices.go | 26 ++++++++++++++++++++++++--
 3 files changed, 41 insertions(+), 8 deletions(-)

diff --git a/lxd/container.go b/lxd/container.go
index bde60418..d53d91e1 100644
--- a/lxd/container.go
+++ b/lxd/container.go
@@ -81,6 +81,8 @@ func containerValidConfigKey(os *sys.OS, key string, value string) error {
 	return nil
 }
 
+var containerNetworkLimitKeys = []string{"limits.max", "limits.ingress", "limits.egress"}
+
 func containerValidDeviceConfigKey(t, k string) bool {
 	if k == "type" {
 		return true
diff --git a/lxd/container_lxc.go b/lxd/container_lxc.go
index 0a7320e0..74673f18 100644
--- a/lxd/container_lxc.go
+++ b/lxd/container_lxc.go
@@ -3363,7 +3363,7 @@ func (c *containerLXC) Update(args db.ContainerArgs, userRequested bool) error {
 	}
 
 	// Diff the devices
-	removeDevices, addDevices, updateDevices := oldExpandedDevices.Update(c.expandedDevices)
+	removeDevices, addDevices, updateDevices, updateDiff := oldExpandedDevices.Update(c.expandedDevices)
 
 	// Do some validation of the config diff
 	err = containerValidConfig(c.state.OS, c.expandedConfig, false, true)
@@ -3973,10 +3973,20 @@ func (c *containerLXC) Update(args db.ContainerArgs, userRequested bool) error {
 			if m["type"] == "disk" {
 				updateDiskLimit = true
 			} else if m["type"] == "nic" {
-				// Refresh tc limits
-				err = c.setNetworkLimits(k, m)
-				if err != nil {
-					return err
+				needsUpdate := false
+				for _, v := range containerNetworkLimitKeys {
+					needsUpdate = shared.StringInSlice(v, updateDiff)
+					if needsUpdate {
+						break
+					}
+				}
+
+				if needsUpdate {
+					// Refresh tc limits
+					err = c.setNetworkLimits(k, m)
+					if err != nil {
+						return err
+					}
 				}
 			}
 		}
@@ -6772,7 +6782,6 @@ func (c *containerLXC) setNetworkLimits(name string, m types.Device) error {
 
 	// Look for the host side interface name
 	veth := c.getHostInterface(m["name"])
-
 	if veth == "" {
 		return fmt.Errorf("LXC doesn't know about this device and the host_name property isn't set, can't find host side veth name")
 	}
diff --git a/lxd/types/devices.go b/lxd/types/devices.go
index 8f735715..50145548 100644
--- a/lxd/types/devices.go
+++ b/lxd/types/devices.go
@@ -48,7 +48,26 @@ func deviceEquals(old Device, d Device) bool {
 	return true
 }
 
-func (old Devices) Update(newlist Devices) (map[string]Device, map[string]Device, map[string]Device) {
+func deviceEqualsDiffKeys(old Device, d Device) []string {
+	keys := []string{}
+
+	// Check for any difference and addition/removal of properties
+	for k := range d {
+		if d[k] != old[k] {
+			keys = append(keys, k)
+		}
+	}
+
+	for k := range old {
+		if d[k] != old[k] {
+			keys = append(keys, k)
+		}
+	}
+
+	return keys
+}
+
+func (old Devices) Update(newlist Devices) (map[string]Device, map[string]Device, map[string]Device, []string) {
 	rmlist := map[string]Device{}
 	addlist := map[string]Device{}
 	updatelist := map[string]Device{}
@@ -65,6 +84,7 @@ func (old Devices) Update(newlist Devices) (map[string]Device, map[string]Device
 		}
 	}
 
+	updateDiff := []string{}
 	for key, d := range addlist {
 		srcOldDevice := rmlist[key]
 		var oldDevice Device
@@ -80,6 +100,8 @@ func (old Devices) Update(newlist Devices) (map[string]Device, map[string]Device
 			continue
 		}
 
+		updateDiff = deviceEqualsDiffKeys(oldDevice, newDevice)
+
 		for _, k := range []string{"limits.max", "limits.read", "limits.write", "limits.egress", "limits.ingress", "ipv4.address", "ipv6.address"} {
 			delete(oldDevice, k)
 			delete(newDevice, k)
@@ -92,7 +114,7 @@ func (old Devices) Update(newlist Devices) (map[string]Device, map[string]Device
 		}
 	}
 
-	return rmlist, addlist, updatelist
+	return rmlist, addlist, updatelist, updateDiff
 }
 
 func (newBaseDevices Devices) ExtendFromProfile(currentFullDevices Devices, newDevicesFromProfile Devices) error {
