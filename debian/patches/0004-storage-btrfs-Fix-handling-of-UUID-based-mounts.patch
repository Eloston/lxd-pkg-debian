From 2b93789c99db0c5fe9f32ce8b1c4b580ebf36172 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@ubuntu.com>
Date: Tue, 2 Jan 2018 18:18:58 +0100
Subject: storage/btrfs: Fix handling of UUID-based mounts
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Closes #4121

Signed-off-by: St√©phane Graber <stgraber@ubuntu.com>
---
 lxd/storage_btrfs.go | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/lxd/storage_btrfs.go b/lxd/storage_btrfs.go
index 20a2dd45..1218ee27 100644
--- a/lxd/storage_btrfs.go
+++ b/lxd/storage_btrfs.go
@@ -108,7 +108,12 @@ func (s *storageBtrfs) StoragePoolCreate() error {
 	s.pool.Config["volatile.initial_source"] = s.pool.Config["source"]
 
 	isBlockDev := false
-	source := shared.HostPath(s.pool.Config["source"])
+
+	source := s.pool.Config["source"]
+	if strings.HasPrefix(source, "/") {
+		source = shared.HostPath(s.pool.Config["source"])
+	}
+
 	if source == "" {
 		source = filepath.Join(shared.VarPath("disks"), fmt.Sprintf("%s.img", s.pool.Name))
 		s.pool.Config["source"] = source
@@ -259,7 +264,11 @@ func (s *storageBtrfs) StoragePoolCreate() error {
 func (s *storageBtrfs) StoragePoolDelete() error {
 	logger.Infof("Deleting BTRFS storage pool \"%s\".", s.pool.Name)
 
-	source := shared.HostPath(s.pool.Config["source"])
+	source := s.pool.Config["source"]
+	if strings.HasPrefix(source, "/") {
+		source = shared.HostPath(s.pool.Config["source"])
+	}
+
 	if source == "" {
 		return fmt.Errorf("no \"source\" property found for the storage pool")
 	}
@@ -324,7 +333,11 @@ func (s *storageBtrfs) StoragePoolDelete() error {
 func (s *storageBtrfs) StoragePoolMount() (bool, error) {
 	logger.Debugf("Mounting BTRFS storage pool \"%s\".", s.pool.Name)
 
-	source := shared.HostPath(s.pool.Config["source"])
+	source := s.pool.Config["source"]
+	if strings.HasPrefix(source, "/") {
+		source = shared.HostPath(s.pool.Config["source"])
+	}
+
 	if source == "" {
 		return false, fmt.Errorf("no \"source\" property found for the storage pool")
 	}
