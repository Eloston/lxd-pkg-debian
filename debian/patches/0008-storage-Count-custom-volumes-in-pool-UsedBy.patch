From 483175c565d340df485d9490512d696666dd2b00 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@ubuntu.com>
Date: Tue, 8 Aug 2017 15:30:19 -0400
Subject: storage: Count custom volumes in pool UsedBy
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: St√©phane Graber <stgraber@ubuntu.com>
---
 lxd/storage_pools_utils.go | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/lxd/storage_pools_utils.go b/lxd/storage_pools_utils.go
index 95761c4f..e1f3100e 100644
--- a/lxd/storage_pools_utils.go
+++ b/lxd/storage_pools_utils.go
@@ -81,7 +81,7 @@ func storagePoolUpdate(d *Daemon, name, newDescription string, newConfig map[str
 // /1.0/profiles/default
 func storagePoolUsedByGet(db *sql.DB, poolID int64, poolName string) ([]string, error) {
 	// Retrieve all non-custom volumes that exist on this storage pool.
-	volumes, err := dbStoragePoolVolumesGet(db, poolID, []int{storagePoolVolumeTypeContainer, storagePoolVolumeTypeImage})
+	volumes, err := dbStoragePoolVolumesGet(db, poolID, []int{storagePoolVolumeTypeContainer, storagePoolVolumeTypeImage, storagePoolVolumeTypeCustom})
 	if err != nil && err != NoSuchObjectError {
 		return []string{}, err
 	}
@@ -112,8 +112,7 @@ func storagePoolUsedByGet(db *sql.DB, poolID int64, poolName string) ([]string,
 		case storagePoolVolumeAPIEndpointImages:
 			poolUsedBy[i] = fmt.Sprintf("/%s/images/%s", version.APIVersion, volumes[i].Name)
 		case storagePoolVolumeAPIEndpointCustom:
-			// Bug
-			return []string{}, fmt.Errorf("database function returned volume type \"%s\" although not queried for it", volumes[i].Type)
+			poolUsedBy[i] = fmt.Sprintf("/%s/storage-pools/%s/volumes/%s/%s", version.APIVersion, poolName, volumes[i].Type, volumes[i].Name)
 		default:
 			// If that happens the db is busted, so report an error.
 			return []string{}, fmt.Errorf("invalid storage type for storage volume \"%s\"", volumes[i].Name)
