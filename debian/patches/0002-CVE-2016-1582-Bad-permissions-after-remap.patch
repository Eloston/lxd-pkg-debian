From 9adbb4ac61a7fcf0914cc1a29712cbd64572ec22 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@ubuntu.com>
Date: Thu, 26 May 2016 15:34:13 -0400
Subject: CVE-2016-1582: Bad permissions after remap
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When switching an unprivileged container into privileged mode, the
container directory remains owned by the container uid/gid and has a 755
directory mode rather than the expected 700.

This allows traversal by a host user to reach potentially now
root-owned setuid paths.

Reported-by: Robie Basak
Signed-off-by: St√©phane Graber <stgraber@ubuntu.com>
---
 lxd/container.go   | 23 +++++++++++++++++++++++
 lxd/storage_lvm.go | 43 +++++++++++++++++++++++++++++++++----------
 2 files changed, 56 insertions(+), 10 deletions(-)

diff --git a/lxd/container.go b/lxd/container.go
index b9cd9ec..0eb636f 100644
--- a/lxd/container.go
+++ b/lxd/container.go
@@ -986,6 +986,29 @@ func (c *containerLXD) Start() error {
 				return err
 			}
 		}
+
+		var mode os.FileMode
+		var uid int
+		var gid int
+
+		if c.IsPrivileged() {
+			mode = 0700
+		} else {
+			mode = 0755
+			if idmap != nil {
+				uid, gid = idmap.ShiftIntoNs(0, 0)
+			}
+		}
+
+		err = os.Chmod(c.PathGet(""), mode)
+		if err != nil {
+			return err
+		}
+
+		err = os.Chown(c.PathGet(""), uid, gid)
+		if err != nil {
+			return err
+		}
 	}
 
 	err = c.ConfigKeySet("volatile.last_state.idmap", jsonIdmap)
diff --git a/lxd/storage_lvm.go b/lxd/storage_lvm.go
index eddffcc..1a29f90 100644
--- a/lxd/storage_lvm.go
+++ b/lxd/storage_lvm.go
@@ -228,6 +228,12 @@ func (s *storageLvm) ContainerCreate(container container) error {
 		return err
 	}
 
+	destPath := container.PathGet("")
+	err = os.Chmod(destPath, 0700)
+	if err != nil {
+		return err
+	}
+
 	dst := shared.VarPath("containers", fmt.Sprintf("%s.lv", container.NameGet()))
 	err = os.Symlink(lvpath, dst)
 	if err != nil {
@@ -261,28 +267,45 @@ func (s *storageLvm) ContainerCreateFromImage(
 		return fmt.Errorf("Error creating container directory: %v", err)
 	}
 
+	err = os.Chmod(destPath, 0700)
+	if err != nil {
+		return err
+	}
+
 	dst := shared.VarPath("containers", fmt.Sprintf("%s.lv", container.NameGet()))
 	err = os.Symlink(lvpath, dst)
 	if err != nil {
 		return err
 	}
 
-	if !container.IsPrivileged() {
-		output, err := exec.Command("mount", "-o", "discard", lvpath, destPath).CombinedOutput()
-		if err != nil {
-			s.ContainerDelete(container)
-			return fmt.Errorf("Error mounting snapshot LV: %v\noutput:'%s'", err, string(output))
-		}
+	output, err := exec.Command("mount", "-o", "discard", lvpath, destPath).CombinedOutput()
+	if err != nil {
+		s.ContainerDelete(container)
+		return fmt.Errorf("Error mounting snapshot LV: %v\noutput:'%s'", err, string(output))
+	}
+
+	var mode os.FileMode
+	if container.IsPrivileged() {
+		mode = 0700
+	} else {
+		mode = 0755
+	}
 
+	err = os.Chmod(destPath, mode)
+	if err != nil {
+		return err
+	}
+
+	if !container.IsPrivileged() {
 		if err = s.shiftRootfs(container); err != nil {
 			s.ContainerDelete(container)
 			return fmt.Errorf("Error in shiftRootfs: %v", err)
 		}
+	}
 
-		output, err = exec.Command("umount", destPath).CombinedOutput()
-		if err != nil {
-			return fmt.Errorf("Error unmounting '%s' after shiftRootfs: %v", destPath, err)
-		}
+	output, err = exec.Command("umount", destPath).CombinedOutput()
+	if err != nil {
+		return fmt.Errorf("Error unmounting '%s' after shiftRootfs: %v", destPath, err)
 	}
 
 	return container.TemplateApply("create")
