From 31c03b98bc1c9f72b6d16366719480b0b8539fa3 Mon Sep 17 00:00:00 2001
From: Christian Brauner <christian.brauner@ubuntu.com>
Date: Thu, 16 Feb 2017 23:35:13 +0100
Subject: test: execute tests based on available tools

Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
---
 test/suites/init.sh    |   7 ++
 test/suites/storage.sh | 171 +++++++++++++++++++++++++++----------------------
 2 files changed, 102 insertions(+), 76 deletions(-)

diff --git a/test/suites/init.sh b/test/suites/init.sh
index 8a41846..77756b6 100644
--- a/test/suites/init.sh
+++ b/test/suites/init.sh
@@ -28,11 +28,14 @@ test_lxd_autoinit() {
     chmod +x "${LXD_INIT_DIR}"
     spawn_lxd "${LXD_INIT_DIR}" false
 
+    # shellcheck disable=SC2154
     configure_loop_device loop_file_1 loop_device_1
+    # shellcheck disable=SC2154
     zpool create "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool" "${loop_device_1}" -m none -O compression=on
     LXD_DIR=${LXD_INIT_DIR} lxd init --auto --storage-backend zfs --storage-pool "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool"
 
     kill_lxd "${LXD_INIT_DIR}"
+    # shellcheck disable=SC2154
     deconfigure_loop_device "${loop_file_1}" "${loop_device_1}"
   fi
 
@@ -43,11 +46,13 @@ test_lxd_autoinit() {
     spawn_lxd "${LXD_INIT_DIR}" false
 
     configure_loop_device loop_file_1 loop_device_1
+    # shellcheck disable=SC2154
     zpool create "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool" "${loop_device_1}" -m none -O compression=on
     LXD_DIR=${LXD_INIT_DIR} lxd init --auto --storage-backend zfs --storage-pool "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool/non-existing-dataset"
 
     kill_lxd "${LXD_INIT_DIR}"
     deconfigure_loop_device "${loop_file_1}" "${loop_device_1}"
+    # shellcheck disable=SC2154
     zpool destroy -f "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool"
   fi
 
@@ -58,12 +63,14 @@ test_lxd_autoinit() {
     spawn_lxd "${LXD_INIT_DIR}" false
 
     configure_loop_device loop_file_1 loop_device_1
+    # shellcheck disable=SC2154
     zpool create "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool" "${loop_device_1}" -f -m none -O compression=on
     zfs create -p -o mountpoint=none "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool/existing-dataset"
     LXD_DIR=${LXD_INIT_DIR} lxd init --auto --storage-backend zfs --storage-pool "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool/existing-dataset"
 
     kill_lxd "${LXD_INIT_DIR}"
     deconfigure_loop_device "${loop_file_1}" "${loop_device_1}"
+    # shellcheck disable=SC2154
     zpool destroy -f "lxdtest-$(basename "${LXD_DIR}")-pool1-existing-pool"
   fi
 
diff --git a/test/suites/storage.sh b/test/suites/storage.sh
index ad8eead..4eddeaf 100644
--- a/test/suites/storage.sh
+++ b/test/suites/storage.sh
@@ -1,6 +1,8 @@
 #!/bin/sh
 
 test_storage() {
+  # shellcheck disable=2039
+
   LXD_STORAGE_DIR=$(mktemp -d -p "${TEST_DIR}" XXXXXXXXX)
   chmod +x "${LXD_STORAGE_DIR}"
   spawn_lxd "${LXD_STORAGE_DIR}" false
@@ -9,91 +11,98 @@ test_storage() {
     # shellcheck disable=2030
     LXD_DIR="${LXD_STORAGE_DIR}"
 
-    # Only create zfs pools on 64 bit arches. I think getconf LONG_BIT should
-    # even work when running a 32bit userspace on a 64 bit kernel.
-    ARCH=$(getconf LONG_BIT)
-    BACKEND=btrfs
-    if [ "${ARCH}" = "64" ]; then
-      BACKEND=zfs
-    fi
-
+    # shellcheck disable=SC1009
+    if which zfs >/dev/null 2>&1; then
     # Create loop file zfs pool.
-    lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool1" "${BACKEND}"
+      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool1" zfs
 
-    if [ "${BACKEND}" = "zfs" ]; then
       # Let LXD use an already existing dataset.
       zfs create -p -o mountpoint=none "lxdtest-$(basename "${LXD_DIR}")-pool1/existing-dataset-as-pool"
-      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool7" "${BACKEND}" source="lxdtest-$(basename "${LXD_DIR}")-pool1/existing-dataset-as-pool"
+      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool7" zfs source="lxdtest-$(basename "${LXD_DIR}")-pool1/existing-dataset-as-pool"
 
       # Let LXD use an already existing storage pool.
       configure_loop_device loop_file_4 loop_device_4
       # shellcheck disable=SC2154
       zpool create "lxdtest-$(basename "${LXD_DIR}")-pool9-existing-pool" "${loop_device_4}" -f -m none -O compression=on
-      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool9" "${BACKEND}" source="lxdtest-$(basename "${LXD_DIR}")-pool9-existing-pool"
+      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool9" zfs source="lxdtest-$(basename "${LXD_DIR}")-pool9-existing-pool"
 
       # Let LXD create a new dataset and use as pool.
-      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool8" "${BACKEND}" source="lxdtest-$(basename "${LXD_DIR}")-pool1/non-existing-dataset-as-pool"
-    fi
+      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool8" zfs source="lxdtest-$(basename "${LXD_DIR}")-pool1/non-existing-dataset-as-pool"
 
-    # Create device backed zfs pool
-    configure_loop_device loop_file_1 loop_device_1
-    # shellcheck disable=SC2154
-    lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool2" "${BACKEND}" source="${loop_device_1}"
+      # Create device backed zfs pool
+      configure_loop_device loop_file_1 loop_device_1
+      # shellcheck disable=SC2154
+      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool2" zfs source="${loop_device_1}"
+    fi
 
-    # Create loop file btrfs pool.
-    lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool3" btrfs
+    if which btrfs >/dev/null 2>&1; then
+      # Create loop file btrfs pool.
+      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool3" btrfs
 
-    # Create device backed btrfs pool.
-    configure_loop_device loop_file_2 loop_device_2
-    # shellcheck disable=SC2154
-    lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool4" btrfs source="${loop_device_2}"
+      # Create device backed btrfs pool.
+      configure_loop_device loop_file_2 loop_device_2
+      # shellcheck disable=SC2154
+      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool4" btrfs source="${loop_device_2}"
+    fi
 
     # Create dir pool.
     lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool5" dir
 
-    # Create lvm pool.
-    configure_lvm_loop_device loop_file_3 loop_device_3
-    # shellcheck disable=SC2154
-    lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool6" lvm source="${loop_device_3}"
+    if which lvdisplay >/dev/null 2>&1; then
+      # Create lvm pool.
+      configure_lvm_loop_device loop_file_3 loop_device_3
+      # shellcheck disable=SC2154
+      lxc storage create "lxdtest-$(basename "${LXD_DIR}")-pool6" lvm source="${loop_device_3}"
+    fi
 
     # Set default storage pool for image import.
-    lxc profile device add default root disk path="/" pool="lxdtest-$(basename "${LXD_DIR}")-pool1"
+    lxc profile device add default root disk path="/" pool="lxdtest-$(basename "${LXD_DIR}")-pool5"
 
     # Import image into default storage pool.
     ensure_import_testimage
 
     # Muck around with some containers on various pools.
-    lxc init testimage c1pool1 -s "lxdtest-$(basename "${LXD_DIR}")-pool1"
-    lxc list -c b c1pool1 | grep "lxdtest-$(basename "${LXD_DIR}")-pool1"
-    lxc init testimage c2pool2 -s "lxdtest-$(basename "${LXD_DIR}")-pool2"
-    lxc list -c b c2pool2 | grep "lxdtest-$(basename "${LXD_DIR}")-pool2"
-
-    lxc launch testimage c3pool1 -s "lxdtest-$(basename "${LXD_DIR}")-pool1"
-    lxc list -c b c3pool1 | grep "lxdtest-$(basename "${LXD_DIR}")-pool1"
-    lxc launch testimage c4pool2 -s "lxdtest-$(basename "${LXD_DIR}")-pool2"
-    lxc list -c b c4pool2 | grep "lxdtest-$(basename "${LXD_DIR}")-pool2"
-
-    lxc init testimage c5pool3 -s "lxdtest-$(basename "${LXD_DIR}")-pool3"
-    lxc list -c b c5pool3 | grep "lxdtest-$(basename "${LXD_DIR}")-pool3"
-    lxc init testimage c6pool4 -s "lxdtest-$(basename "${LXD_DIR}")-pool4"
-    lxc list -c b c6pool4 | grep "lxdtest-$(basename "${LXD_DIR}")-pool4"
-
-    lxc launch testimage c7pool3 -s "lxdtest-$(basename "${LXD_DIR}")-pool3"
-    lxc list -c b c7pool3 | grep "lxdtest-$(basename "${LXD_DIR}")-pool3"
-    lxc launch testimage c8pool4 -s "lxdtest-$(basename "${LXD_DIR}")-pool4"
-    lxc list -c b c8pool4 | grep "lxdtest-$(basename "${LXD_DIR}")-pool4"
+    if which zfs >/dev/null 2>&1; then
+      lxc init testimage c1pool1 -s "lxdtest-$(basename "${LXD_DIR}")-pool1"
+      lxc list -c b c1pool1 | grep "lxdtest-$(basename "${LXD_DIR}")-pool1"
+
+      lxc init testimage c2pool2 -s "lxdtest-$(basename "${LXD_DIR}")-pool2"
+      lxc list -c b c2pool2 | grep "lxdtest-$(basename "${LXD_DIR}")-pool2"
+
+      lxc launch testimage c3pool1 -s "lxdtest-$(basename "${LXD_DIR}")-pool1"
+      lxc list -c b c3pool1 | grep "lxdtest-$(basename "${LXD_DIR}")-pool1"
+
+      lxc launch testimage c4pool2 -s "lxdtest-$(basename "${LXD_DIR}")-pool2"
+      lxc list -c b c4pool2 | grep "lxdtest-$(basename "${LXD_DIR}")-pool2"
+    fi
+
+    if which btrfs >/dev/null 2>&1; then
+      lxc init testimage c5pool3 -s "lxdtest-$(basename "${LXD_DIR}")-pool3"
+      lxc list -c b c5pool3 | grep "lxdtest-$(basename "${LXD_DIR}")-pool3"
+      lxc init testimage c6pool4 -s "lxdtest-$(basename "${LXD_DIR}")-pool4"
+      lxc list -c b c6pool4 | grep "lxdtest-$(basename "${LXD_DIR}")-pool4"
+
+      lxc launch testimage c7pool3 -s "lxdtest-$(basename "${LXD_DIR}")-pool3"
+      lxc list -c b c7pool3 | grep "lxdtest-$(basename "${LXD_DIR}")-pool3"
+      lxc launch testimage c8pool4 -s "lxdtest-$(basename "${LXD_DIR}")-pool4"
+      lxc list -c b c8pool4 | grep "lxdtest-$(basename "${LXD_DIR}")-pool4"
+    fi
 
     lxc init testimage c9pool5 -s "lxdtest-$(basename "${LXD_DIR}")-pool5"
     lxc list -c b c9pool5 | grep "lxdtest-$(basename "${LXD_DIR}")-pool5"
-    lxc init testimage c10pool6 -s "lxdtest-$(basename "${LXD_DIR}")-pool6"
-    lxc list -c b c10pool6 | grep "lxdtest-$(basename "${LXD_DIR}")-pool6"
 
     lxc launch testimage c11pool5 -s "lxdtest-$(basename "${LXD_DIR}")-pool5"
     lxc list -c b c11pool5 | grep "lxdtest-$(basename "${LXD_DIR}")-pool5"
-    lxc launch testimage c12pool6 -s "lxdtest-$(basename "${LXD_DIR}")-pool6"
-    lxc list -c b c12pool6 | grep "lxdtest-$(basename "${LXD_DIR}")-pool6"
 
-    if [ "${BACKEND}" = "zfs" ]; then
+    if which lvdisplay >/dev/null 2>&1; then
+      lxc init testimage c10pool6 -s "lxdtest-$(basename "${LXD_DIR}")-pool6"
+      lxc list -c b c10pool6 | grep "lxdtest-$(basename "${LXD_DIR}")-pool6"
+
+      lxc launch testimage c12pool6 -s "lxdtest-$(basename "${LXD_DIR}")-pool6"
+      lxc list -c b c12pool6 | grep "lxdtest-$(basename "${LXD_DIR}")-pool6"
+    fi
+
+    if which zfs >/dev/null 2>&1; then
       lxc launch testimage c13pool7 -s "lxdtest-$(basename "${LXD_DIR}")-pool7"
       lxc launch testimage c14pool7 -s "lxdtest-$(basename "${LXD_DIR}")-pool7"
 
@@ -104,25 +113,31 @@ test_storage() {
       lxc launch testimage c18pool9 -s "lxdtest-$(basename "${LXD_DIR}")-pool9"
     fi
 
-    lxc delete -f c1pool1
-    lxc delete -f c2pool2
+    if which zfs >/dev/null 2>&1; then
+      lxc delete -f c1pool1
+      lxc delete -f c3pool1
 
-    lxc delete -f c3pool1
-    lxc delete -f c4pool2
+      lxc delete -f c4pool2
+      lxc delete -f c2pool2
+    fi
 
-    lxc delete -f c5pool3
-    lxc delete -f c6pool4
+    if which btrfs >/dev/null 2>&1; then
+      lxc delete -f c5pool3
+      lxc delete -f c7pool3
 
-    lxc delete -f c7pool3
-    lxc delete -f c8pool4
+      lxc delete -f c8pool4
+      lxc delete -f c6pool4
+    fi
 
     lxc delete -f c9pool5
-    lxc delete -f c10pool6
-
     lxc delete -f c11pool5
-    lxc delete -f c12pool6
 
-    if [ "${BACKEND}" = "zfs" ]; then
+    if which lvdisplay >/dev/null 2>&1; then
+      lxc delete -f c10pool6
+      lxc delete -f c12pool6
+    fi
+
+    if which zfs >/dev/null 2>&1; then
       lxc delete -f c13pool7
       lxc delete -f c14pool7
 
@@ -135,25 +150,29 @@ test_storage() {
 
     lxc image delete testimage
 
-    if [ "${BACKEND}" = "zfs" ]; then
+    if which zfs >/dev/null 2>&1; then
       lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool7"
       lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool8"
       lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool9"
       # shellcheck disable=SC2154
       deconfigure_loop_device "${loop_file_4}" "${loop_device_4}"
-    fi
 
-    lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool2"
-    # shellcheck disable=SC2154
-    deconfigure_loop_device "${loop_file_1}" "${loop_device_1}"
+      lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool2"
+      # shellcheck disable=SC2154
+      deconfigure_loop_device "${loop_file_1}" "${loop_device_1}"
+    fi
 
-    lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool4"
-    # shellcheck disable=SC2154
-    deconfigure_loop_device "${loop_file_2}" "${loop_device_2}"
+    if which btrfs >/dev/null 2>&1; then
+      lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool4"
+      # shellcheck disable=SC2154
+      deconfigure_loop_device "${loop_file_2}" "${loop_device_2}"
+    fi
 
-    lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool6"
-    # shellcheck disable=SC2154
-    deconfigure_lvm_loop_device "${loop_file_3}" "${loop_device_3}"
+    if which lvdisplay >/dev/null 2>&1; then
+      lxc storage delete "lxdtest-$(basename "${LXD_DIR}")-pool6"
+      # shellcheck disable=SC2154
+      deconfigure_lvm_loop_device "${loop_file_3}" "${loop_device_3}"
+    fi
   )
 
   # shellcheck disable=SC2031
